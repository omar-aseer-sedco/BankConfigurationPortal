@model BankConfigurationPortal.Web.Models.Counter

@{
    bool isArabic = false;
    var languageCookie = Context.Request.Cookies["language"];
    if (languageCookie != null) {
        if (languageCookie.Value == "ar") {
            isArabic = true;
        }
        else {
            isArabic = false;
        }
    }

    ViewBag.Title = WebResources.Create;
}

<h2>@WebResources.Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@WebResources.Counter</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @if (!isArabic) {
                @Html.LabelFor(model => model.NameEn, htmlAttributes: new { @class = "control-label col-md-2" })
            }
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameEn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameEn, "", new { @class = "text-danger" })
            </div>
            @if (isArabic) {
                @Html.LabelFor(model => model.NameEn, htmlAttributes: new { @class = "control-label col-md-2" })
            }
        </div>

        <div class="form-group">
            @if (!isArabic) {
                @Html.LabelFor(model => model.NameAr, htmlAttributes: new { @class = "control-label col-md-2" })
            }
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameAr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameAr, "", new { @class = "text-danger" })
            </div>
            @if (isArabic) {
                @Html.LabelFor(model => model.NameAr, htmlAttributes: new { @class = "control-label col-md-2" })
            }
        </div>

        <div class="form-group">
            @if (!isArabic) {
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            }
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active)
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (isArabic) {
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            }
        </div>

        <div class="form-group">
            @if (!isArabic) {
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            }
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
            @if (isArabic) {
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@WebResources.Create class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(WebResources.BackToList, "Index", new { branchId = ViewBag.BranchId })
</div>
